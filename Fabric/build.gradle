plugins {
    id 'multiloader-loader'
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id "me.modmuss50.mod-publish-plugin" version "0.5.1"
}



dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.6:2024.05.01@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${project.forge_config_api_port_version}"
    include "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${project.forge_config_api_port_version}"
    modImplementation("mysticdrew:common-networking-fabric:${common_network_version}-${minecraft_version}")
    include("mysticdrew:common-networking-fabric:${common_network_version}-${minecraft_version}")

}

loom {
    def aw = project(":common").file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("runs/client")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runs/server")
        }
    }
}

publishMods {
    file = remapJar.archiveFile
    changelog = project(":common").file("changelog.md").text
    type = STABLE
    modLoaders.add("fabric")
    displayName = "${mod_name}-${minecraft_version}-[Fabric]-${project.version}"
    dryRun = dry_run.toBoolean()
    if (curseforge_publishing_enabled.toBoolean()) {
        curseforge {
            projectId = curseforge_project_id
            accessToken = curseforge_token
            minecraftVersions.add(minecraft_version)
            clientRequired = true
            serverRequired = true
            javaVersions.add(JavaVersion.VERSION_17)
        }
    }
    if (modrinth_publishing_enabled.toBoolean()) {
        modrinth {
            accessToken = modrinth_token
            projectId = modrinth_project_id
            minecraftVersions.add(minecraft_version)
        }
    }
}